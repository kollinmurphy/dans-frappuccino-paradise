---
import Layout from "@layouts/Layout.astro";
import { authenticate } from "@utils/auth";
import AddMoneyForm from "@components/AddMoneyForm";
import db from "@database";
import OrderHistory from "@components/OrderHistory";
import type { Order as OrderModel } from "@data/types/order";

const account = authenticate(Astro.cookies);
if (!account) return Astro.redirect("/signin");
const newAccount = await db.Account.findByPk(account.id);
if (!newAccount) return Astro.redirect("/404");
const balance = Math.round(newAccount.balance * 100) / 100;

const orders = await db.Order.findAll({
  where: {
    accountId: account.id,
  },
  order: [["createdAt", "DESC"]],
  include: [
    {
      model: db.OrderProduct,
      include: [
        db.Product,
        {
          model: db.OrderProductIngredient,
          include: [db.Ingredient],
        },
      ],
    },
  ],
});

const purchased = Astro.url.searchParams.get("purchased") === "true" 
---

<Layout title="Account">

  
  {purchased ? 
  <div class="pt-6 px-6 flex w-full">
    <div class="alert alert-success shadow-lg">
      <div>
        <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>
        <span>Your purchase has been confirmed!</span>
      </div>
    </div>
  </div> : null}

  <h1>Welcome, {account.username}!</h1>

  

  <AddMoneyForm balance={balance} client:idle />
  <OrderHistory client:idle orders={orders.map(o => o.get({ plain: true })) as unknown as Array<OrderModel>} />
</Layout>
